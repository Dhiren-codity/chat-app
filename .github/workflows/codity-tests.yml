name: Codity AI - Run Generated Tests

on:
  pull_request:
    branches:
      - '**'

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  test-python:
    name: Python Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi
          if [ -f requirements-dev.txt ]; then
            pip install -r requirements-dev.txt
          fi
          # Install test dependencies
          pip install pytest pytest-cov pytest-asyncio

      - name: Run Python tests (First attempt)
        id: pytest
        run: |
          pytest routes/reactions_test.py -v --tb=short --color=yes 2>&1 | tee test_output.txt
        continue-on-error: true

      - name: Auto-fix failing tests
        if: steps.pytest.outcome != 'success' && github.event_name == 'pull_request'
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          CODITY_AUTO_FIX_TESTS: "true"
        run: |
          echo "::notice::Tests failed, running auto-fix with 3 retries..."
          python3 -m pip install --quiet openai anthropic
          cat > /tmp/auto_fix_runner.py << 'PYEOF'
import sys
import subprocess
from pathlib import Path
sys.path.insert(0, '.')
from test_generation.execution.test_auto_fixer import TestAutoFixer

test_files = 'routes/reactions_test.py'.split()
auto_fixer = TestAutoFixer(max_retries=3)

for test_file in test_files:
    print(f'\n🔧 Auto-fixing {test_file}...')
    test_code = Path(test_file).read_text()
    success, fixed_code, history = auto_fixer.auto_fix_test(
        test_code=test_code,
        test_file_path=test_file,
        language='python'
    )
    if success:
        print(f'✅ Auto-fix successful for {test_file}')
        Path(test_file).write_text(fixed_code)
    else:
        print(f'⚠️ Auto-fix failed for {test_file}')
        for h in history:
            print(f'  {h}')
PYEOF
          python3 /tmp/auto_fix_runner.py
          rm -f /tmp/auto_fix_runner.py

      - name: Commit auto-fixed tests
        if: steps.pytest.outcome != 'success' && github.event_name == 'pull_request'
        run: |
          git config user.name "Codity AI"
          git config user.email "noreply@codity.ai"
          git add routes/reactions_test.py
          git diff --staged --quiet || git commit -m "🤖 Auto-fix test errors

          Auto-fixed by Codity AI after test failures.

          Co-Authored-By: Codity AI <noreply@codity.ai>"
          git push || echo "::warning::Could not push auto-fixes"

      - name: Re-run tests after auto-fix
        if: steps.pytest.outcome != 'success'
        id: pytest-rerun
        run: |
          pytest routes/reactions_test.py -v --tb=short --color=yes
        continue-on-error: false

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: python-test-results
          path: |
            .pytest_cache/
            test-results/
            test_output.txt
